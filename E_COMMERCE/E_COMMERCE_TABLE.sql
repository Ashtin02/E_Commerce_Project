CREATE DATABASE ECOMMERCE;
USE ECOMMERCE; 

-- Creating Users Table
CREATE TABLE USERS(
	UserID INT PRIMARY KEY NOT NULL AUTO_INCREMENT UNIQUE,
	UserName VARCHAR(100) UNIQUE, 
	Email VARCHAR(100) UNIQUE, 
	User_Password VARCHAR(100),
	RegistrationDate DATE 
);

-- Creating Product Table 
CREATE TABLE PRODUCT(
	ProductID INT PRIMARY KEY NOT NULL AUTO_INCREMENT UNIQUE, 
	Product_name VARCHAR(100) NOT NULL, 
	Description MEDIUMTEXT,
	Price DECIMAL(15,2) NOT NULL
);

-- Creating Order History Table 
CREATE TABLE ORDER_HISTORY(
	OrderID INT PRIMARY KEY NOT NULL AUTO_INCREMENT UNIQUE,
	UserID INT NOT NULL, 
	OrderDate DATE NOT NULL, 
	OrderStatus ENUM ('Delivered', 'Shipped', 'Cancelled', 'Processing') DEFAULT'Processing', 
	OrderTotal Decimal(10,2),
	FOREIGN KEY (UserID) REFERENCES USERS(UserID) ON DELETE CASCADE
);

-- Creating Transactions Table 
CREATE TABLE TRANSACTIONS(
	TransactionID INT PRIMARY KEY NOT NULL AUTO_INCREMENT UNIQUE,
	OrderID INT NOT NULL,
	UserID INT NOT NULL,
	PurchaseAmount DECIMAL(10,2) NOT NULL,
	TransactionDate DATE NOT NULL,
	FOREIGN KEY(OrderID) REFERENCES ORDER_HISTORY(OrderID),
	FOREIGN KEY(UserID) REFERENCES USERS(UserID) ON DELETE CASCADE
);

-- Creating Transaction Detail Table 
CREATE TABLE TRANSACTION_DETAIL(
	TransactionDetailID INT PRIMARY KEY NOT NULL AUTO_INCREMENT UNIQUE, 
	TransactionID INT NOT NULL, 
	ProductID INT NOT NULL, 
	Quantity INT, 
	PurchaseTotal DECIMAL (20,2),
	FOREIGN KEY(TransactionID) REFERENCES TRANSACTIONS(TransactionID) ON DELETE CASCADE, 
	FOREIGN KEY(ProductID) REFERENCES PRODUCT(ProductID) ON DELETE CASCADE
);

-- Creating Inventory Table 
CREATE TABLE INVENTORY(
	InventoryID INT PRIMARY KEY NOT NULL AUTO_INCREMENT UNIQUE, 
	ProductID INT NOT NULL, 
	Available INT DEFAULT 0,
	FOREIGN KEY(ProductID) REFERENCES PRODUCT(ProductID) ON DELETE CASCADE
);

-- Creating Electronic Subclass table for Product
CREATE TABLE ELECTRONIC(
	ProductID INT PRIMARY KEY, 
	BatteryType VARCHAR(100), 
	FOREIGN KEY(ProductID) REFERENCES PRODUCT(ProductID) ON DELETE CASCADE
);

-- Creating Collectible Subclass Table for Product
CREATE TABLE COLLECTIBLE(
	ProductID INT PRIMARY KEY,
	CollectibleCondition VARCHAR(100), 
	FOREIGN KEY(ProductID) REFERENCES PRODUCT(ProductID) ON DELETE CASCADE
);

-- Creating Review Table 
CREATE TABLE REVIEW(
	ProductID INT NOT NULL, 
	UserID INT NOT NULL, 
	Rating ENUM ('1 Star', '2 Star', '3 Star', '4 Star', '5 Star'),
	RatingComment MEDIUMTEXT, 
	RatingDate DATE,
	PRIMARY KEY(ProductID, UserID),
	FOREIGN KEY(ProductID) REFERENCES PRODUCT(ProductID) ON DELETE CASCADE, 
	FOREIGN KEY(UserID) REFERENCES USERS(UserID) ON DELETE CASCADE
);


